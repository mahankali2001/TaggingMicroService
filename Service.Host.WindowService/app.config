<?xml version="1.0" encoding="utf-8"?>

<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
    <section name="EnvironmentSettingsSection" type="Services.Implementation.Config.EnvironmentSettingsSection, Services.Implementation" />
  </configSections>
  <system.diagnostics>
    <sources>
      <source name="System.ServiceModel.MessageLogging" switchValue="Warning, ActivityTracing">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add name="ServiceModelMessageLoggingListener">
            <filter type="" />
          </add>
        </listeners>
      </source>
      <source name="System.ServiceModel" switchValue="Warning, ActivityTracing" propagateActivity="true">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add name="ServiceModelTraceListener">
            <filter type="" />
          </add>
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add initializeData="C:\logs\Service.Host.WindowService\app_messages.svclog" type="System.Diagnostics.XmlWriterTraceListener, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="ServiceModelMessageLoggingListener" traceOutputOptions="Timestamp">
        <filter type="" />
      </add>
      <add initializeData="C:\logs\Service.Host.WindowService\app_tracelog.svclog" type="System.Diagnostics.XmlWriterTraceListener, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="ServiceModelTraceListener" traceOutputOptions="Timestamp">
        <filter type="" />
      </add>
    </sharedListeners>
  </system.diagnostics>
  <EnvironmentSettingsSection>
    
    <EnvironmentSettingsGroup Key="Default">
      <EnvironmentSettings>
        <EnvironmentSetting Name="ConnectionString" Value="" />
        <EnvironmentSetting Name="RetailerCode" Value="Default" />
        <EnvironmentSetting Name="LiferayInstanceCode" Value="Default" />
      </EnvironmentSettings>
    </EnvironmentSettingsGroup>

    <EnvironmentSettingsGroup Key="XYZ_01">
      <EnvironmentSettings>
        <EnvironmentSetting Name="ConnectionString" Value="Data Source=x.x.x.x;Initial Catalog=XYZ_QA;User Id=xxxx;Password=xxxxx;Max Pool Size=500;Min Pool Size=1" />
        <EnvironmentSetting Name="RetailerCode" Value="DEMO" />
        <EnvironmentSetting Name="LiferayInstanceCode" Value="DEMO" />
      </EnvironmentSettings>
    </EnvironmentSettingsGroup>
    
    <EnvironmentSettingsGroup Key="GENERIC_KEY_00">
      <EnvironmentSettings>
        <EnvironmentSetting Name="ConnectionString" Value="Initial Catalog=GENERIC;Data Source=localhost;User Id=sa;Password=aj$luggeR64;" />
        <EnvironmentSetting Name="RetailerCode" Value="GE" />
        <EnvironmentSetting Name="LiferayInstanceCode" Value="GE.LifeRay" />
      </EnvironmentSettings>
    </EnvironmentSettingsGroup>

    <EnvironmentSettingsGroup Key="XYZ_DEV_00">
      <EnvironmentSettings>
        <!--<EnvironmentSetting Name="ConnectionString" Value="server=localhost;port=3306;database=contactdb;uid=root;password=sa$luggeR64" />-->
        <EnvironmentSetting Name="ConnectionString" Value="Initial Catalog=contactdb;Data Source=localhost;User Id=sa;Password=sa$luggeR64;Pooling=True;Max Pool Size=1000;Min Pool Size=1" />
        <EnvironmentSetting Name="RetailerCode" Value="XYZ" />
        <EnvironmentSetting Name="LiferayInstanceCode" Value="XYZ.LifeRay" />
      </EnvironmentSettings>
    </EnvironmentSettingsGroup>  
  </EnvironmentSettingsSection>
  
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <alias alias="IDataManager" type="Persistence.Interface.IDataManager, Persistence.Interface" />
    <alias alias="DataManager" type="Persistence.Implementation.DataManager, Persistence.Implementation" />
    <alias alias="IBusinessManager" type="Business.Interface.IBusinessManager, Business.Interface" />
    <alias alias="BusinessManager" type="Business.Implementation.BusinessManager, Business.Implementation" />
    <container>
      <register type="IDataManager" mapTo="DataManager" />
      <register type="IBusinessManager" mapTo="BusinessManager" />
    </container>
  </unity>
  <appSettings>
    <add key="ServiceName" value="Tagging" />
    <add key="AssemblyName" value="Service.Host.dll" />
    <add key="LiferayDomainUrl" value="https://xyz.com/web/cc/accept-invitation" />
    <add key="LiferayDomainUrlForMigration" value="https://xyz.com/web/cc/import-reg" />
    <add key="DEBUG" value="true" />
    <add key="CoreApi" value="http://localhost:8060/XYZ/REST/1.0" />     
  </appSettings>
  <system.serviceModel>
    <diagnostics>
      <messageLogging logEntireMessage="true" logMalformedMessages="true" logMessagesAtTransportLevel="true" maxMessagesToLog="1000000" />
    </diagnostics>
    <services>
      <service name="Services.Implementation.TaggingServiceImplementation" behaviorConfiguration="serviceBehavior">
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:8064/Tagging" />
          </baseAddresses>
        </host>
        <endpoint address="net.tcp://localhost/Tagging/2.0/" binding="netTcpBinding" bindingConfiguration="NetTcpBinding_Tagging" contract="Service.Contracts.Services.ISOAPTEMPLATEApi" name="NetTcpBinding_Tagging" />
        <endpoint address="http://localhost:8064/Tagging/1.0/" binding="webHttpBinding" behaviorConfiguration="restBehavior" bindingConfiguration="restBinding" contract="Service.Contracts.Services.ITaggingExternalApi" >
          <identity>
            <dns value="*" />
          </identity>
        </endpoint>
      </service>
    </services>
    <behaviors>
      <serviceBehaviors>
        <behavior name="serviceBehavior">
          <serviceMetadata httpGetEnabled="True" />
          <serviceDebug includeExceptionDetailInFaults="false" />
          <serviceThrottling maxConcurrentCalls="200" maxConcurrentSessions="200" maxConcurrentInstances="200" />
        </behavior>
      </serviceBehaviors>
      <endpointBehaviors>
        <behavior name="restBehavior">
          <dataContractSerializer maxItemsInObjectGraph="10000000" />
          <webHttp />
        </behavior>
      </endpointBehaviors>
    </behaviors>
    <bindings>
      <webHttpBinding>
        <binding name="restBinding" maxBufferSize="8000000" maxBufferPoolSize="32000000" maxReceivedMessageSize="8000000"></binding>
      </webHttpBinding>
      <netTcpBinding>
        <binding name="NetTcpBinding_Tagging" closeTimeout="00:10:00" openTimeout="00:10:00" receiveTimeout="00:10:00" sendTimeout="00:10:00" transactionFlow="false" transferMode="Buffered" transactionProtocol="OleTransactions" hostNameComparisonMode="StrongWildcard" listenBacklog="200" maxBufferPoolSize="32000000" maxBufferSize="8000000" maxConnections="200" maxReceivedMessageSize="8000000">
          <readerQuotas maxDepth="64" maxStringContentLength="8000000" maxArrayLength="8000000" maxBytesPerRead="8000000" maxNameTableCharCount="8000000" />
          <reliableSession ordered="true" inactivityTimeout="00:10:00" enabled="false" />
          <security mode="None">
            <transport clientCredentialType="Windows" protectionLevel="EncryptAndSign" />
            <message clientCredentialType="Windows" />
          </security>
        </binding>
      </netTcpBinding>
      <wsHttpBinding>
        <binding name="WSHttpBinding_Tagging" closeTimeout="00:10:00" openTimeout="00:10:00" receiveTimeout="00:10:00" sendTimeout="00:10:00" bypassProxyOnLocal="false" transactionFlow="false" hostNameComparisonMode="StrongWildcard" maxBufferPoolSize="32000000" maxReceivedMessageSize="8000000" messageEncoding="Text" textEncoding="utf-8" useDefaultWebProxy="true" allowCookies="false">
          <readerQuotas maxDepth="64" maxStringContentLength="8000000" maxArrayLength="8000000" maxBytesPerRead="8000000" maxNameTableCharCount="8000000" />
          <reliableSession ordered="true" inactivityTimeout="00:10:00" enabled="false" />
          <security mode="None">
            <transport clientCredentialType="Windows" proxyCredentialType="None" realm="" />
            <message clientCredentialType="Windows" negotiateServiceCredential="true" establishSecurityContext="true" />
          </security>
        </binding>
      </wsHttpBinding>
    </bindings>
  </system.serviceModel>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0" />
  </startup>
  <log4net>
    <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="C:\Logs\MicroService.Tagging.txt" />
      <appendToFile value="true" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="100" />
      <maximumFileSize value="50MB" />
      <staticLogFileName value="true" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %-50.80logger - %message%newline" />
      </layout>
    </appender>
    <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%ndc] - %message%newline" />
      </layout>
    </appender>
    <root>
      <level value="All" />
      <appender-ref ref="RollingFileAppender" />
      <appender-ref ref="ConsoleAppender" />
    </root>
  </log4net>
</configuration>